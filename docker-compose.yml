services:
  furnix-api:
    container_name: furnix-api
    restart: always
    image: node:20.17.0
    network_mode: "host"
    # ports qatorini olib tashlang
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      - NODE_OPTIONS=--dns-result-order=ipv4first
      - PORT_API=5007  # Bu yerda port belgilang
    volumes:
      - ./:/user/src/furnix
    working_dir: /user/src/furnix
    command: bash -c "rm -rf dist && npm install && npm run build && npm run start:prod"
  
  furnix-batch:
    container_name: furnix-batch
    restart: unless-stopped
    image: node:20.17.0
    network_mode: "host"
    # ports qatorini olib tashlang
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      - NODE_OPTIONS=--dns-result-order=ipv4first
      - PORT_BATCH=5008
    volumes:
      - ./:/user/src/furnix
    working_dir: /user/src/furnix
    command: bash -c "npm install && npm run build && npm run start:prod:batch"
networks:
  monorepo-network:
    driver: bridge

# furnix-next: localhost: 5000 <=> container:3000
# furnix-api: localhost: 5001 <=> container:5007
# furnix-batch: localhost: 5002 <=> container:5008



# docker compose up -d
# docker compose stop
# docker compose start
# docker compose restart
# docker compose stop && # docker compose rm -f 